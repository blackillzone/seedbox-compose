#!/bin/bash

HOST=example.com
CERTBOT_EMAIL=test@example.com

# Output colors
NORMAL="\e[0m"
RED="\e[31m"
BLUE="\e[94m"

# function for logs
function log() {
  echo -e "$BLUE> [INFO] - $1$NORMAL"
}

# function for errors
function error() {
  echo ""
  echo -e "$RED >>> [ERROR] - $1$NORMAL"
}

#Check if jq is present and in path
function check_jq() {
  if hash jq 2>/dev/null; then
    log "jq is present, continuing..."
  else
    error "jq is required for this script (https://stedolan.github.io/jq/). Please check, if it is installed, or if it is set in the $PATH. Exit script..."
    exit 1
  fi;
}

#Check if docker is present and in path
function check_docker() {
  if hash docker 2>/dev/null; then
    log "Docker is present, continuing..."
  else
    error "Docker is required for this script (https://www.docker.com/). Please check, if it is installed, or if it is set in the $PATH. Exit script..."
    exit 1
  fi;
}

#Check if docker-compose is present and in path
function check_dockercompose() {
  if hash docker-compose 2>/dev/null; then
    log "docker-compose is present, continuing..."
  else
    error "docker-compose is required for this script (https://docs.docker.com/compose/install/). Please check, if it is installed, or if it is set in the $PATH. Exit script..."
    exit 1
  fi;
}

function generate_certificates() {
    log "The certificates are going to be automaticaly generated by certbot... Please create your DNS entries / CNAME accordingly to the following services, or certbot will not be able to create the certificates, and your services will not be accessible:"
    while read -r line
    do
      echo $line.$HOST
    done < <(curl -s localhost:8500/v1/agent/services | jq -c -r '.[] | .Service')
    read -n1 -r -p "
    Press any key to continue...
  " _
    while read -r line
    do
      if ls "$(pwd)/data/nginx/certs/live/" | grep $line; then
	log "Certificate already generated, continue to the next one..."
      elif [[ $line == "consul" ]] ;then
	log "Avoid creation of certificate for consul. Continuing..."
      else
        docker run --rm -v "$(pwd)/data/nginx/certs:/etc/letsencrypt" --net=host -t deliverous/certbot certonly --agree-tos --email $CERTBOT_EMAIL --standalone -d $line.$HOST
      fi
    done < <(curl -s localhost:8500/v1/agent/services | jq -c -r '.[] | .Service')

    docker run --rm -v "$(pwd)/data/nginx/certs:/certs" -t jordi/openssl-ca openssl dhparam -out /certs/dhparam.pem 2048
}

function config_hostname() {
  curl -X PUT -d "$HOST" http://localhost:8500/v1/kv/dns_entry
}

function start_seedbox() {
  docker-compose up -d
}

function stop_nginx() {
  docker-compose stop nginx
}

function start_nginx() {
  docker-compose start nginx
}

function setup_renew(){
  log "Adding cron job, to automate the certificates renewal"
  cp renew_certificates /etc/cron.daily/
  run-parts --test /etc/cron.daily | grep renew_certificates || {
    error "The cron job renew_certificates is not correctly installed ! Maybe look to install it manually ?"
    exit 1
  }
}

check_jq
check_docker
check_dockercompose
start_seedbox
stop_nginx
config_hostname
generate_certificates
start_nginx
setup_renew
